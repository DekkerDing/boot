
description '解决方案集合'

buildscript {

    ext {

        // Import dependency management from Spring Boot a series of
        springBootVersion = '2.6.14'

        // Test
        junitVersion = '5.8.2'
    }

    repositories {
        mavenLocal()
        gradlePluginPortal()
        maven { url 'https://repo.springsource.org/plugins-release'}
        maven { url 'https://repo.spring.io/plugins-release-local' }
        maven { url "https://repo.spring.io/plugins-release" }
        maven { url 'https://maven.aliyun.com/repository/central'}
        maven { url 'https://maven.aliyun.com/repository/public'}
        maven { url 'https://maven.aliyun.com/repository/goole'}
        maven { url 'https://maven.aliyun.com/repository/spring'}
        maven { url 'https://maven.aliyun.com/nexus/content/groups/public/'}
        maven { url 'https://repo.spring.io/milestone'}
        maven { url 'https://repo.spring.io/libs-snapshot'}
        maven { url 'https://s01.oss.sonatype.org/content/repositories/snapshots/'}
        maven { url "https://repo.spring.io/libs-spring-framework-build" }
        maven { url "https://oss.sonatype.org/content/repositories/snapshots/" }
        maven { url 'https://repo.spring.io/plugins-snapshot' }
        maven { url 'https://plugins.gradle.org/m2/' }
        mavenCentral()
    }

    dependencies {
        classpath "org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}"
    }
}

allprojects {
    apply plugin: 'idea'
    apply plugin: 'java-library'
    apply plugin: 'maven-publish'
    apply plugin: 'org.springframework.boot'
    apply plugin: 'io.spring.dependency-management'

    group 'io.github.DekkerDing'
    version '1.0-SNAPSHOT'
    sourceCompatibility = JavaVersion.VERSION_1_8
    targetCompatibility = JavaVersion.VERSION_1_8
    compileJava.options.encoding "UTF-8"
    compileTestJava.options.encoding "UTF-8"

    dependencies {
        testImplementation "org.junit.jupiter:junit-jupiter-api:${junitVersion}"
        testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:${junitVersion}"
        testImplementation "org.springframework.boot:spring-boot-starter-test:${springBootVersion}"

    }

    test {
        useJUnitPlatform()
    }
}

subprojects{

    apply plugin: 'org.springframework.boot'
    apply plugin: 'io.spring.dependency-management'

    dependencies {
        annotationProcessor 'org.projectlombok:lombok'
        api 'org.projectlombok:lombok'
        api "org.springframework.boot:spring-boot:${springBootVersion}"
        api "org.springframework.boot:spring-boot-autoconfigure:${springBootVersion}"
        api "org.springframework.boot:spring-boot-configuration-processor:${springBootVersion}"
        api "org.springframework.boot:spring-boot-devtools:${springBootVersion}"
    }

    dependencyManagement{

        imports {
            mavenBom "org.springframework.boot:spring-boot-dependencies:${springBootVersion}"
        }
    }
}

javadoc {
    afterEvaluate {
        configure(options) {
            encoding "UTF-8"
            charSet 'UTF-8'
            author true
            version true
            failOnError false
            links "http://docs.oracle.com/javase/8/docs/api"
        }
    }
}

//publications {
//
//    mavenJava(MavenPublication) {
//        from components.java
//
//        artifact sourcesJar
//        artifact javadocJar
//
//        pom {
//            name = 'mybatis-plus'
//            packaging 'jar'
//            description = 'An enhanced toolkit of Mybatis to simplify development.'
//            url = 'https://github.com/baomidou/mybatis-plus'
//
//            scm {
//                connection = 'scm:git@github.com:Codearte/gradle-nexus-staging-plugin.git'
//                developerConnection = 'scm:git@github.com:Codearte/gradle-nexus-staging-plugin.git'
//                url = 'https://github.com/baomidou/mybatis-plus'
//            }
//
//            licenses {
//                license {
//                    name = 'The Apache License, Version 2.0'
//                    url = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
//                }
//            }
//
//            developers {
//                developer {
//                    id = 'baomidou'
//                    name = 'hubin'
//                    email = 'jobob@qq.com'
//                }
//            }
//
//            withXml {
//                def root = asNode()
//                root.dependencies.'*'.findAll {
//                    def d = it
//                    d.scope.text() == 'runtime' && project.configurations.findByName("implementation").allDependencies.find { dep ->
//                        dep.name == it.artifactId.text()
//                    }.each() {
//                        d.scope*.value = 'compile'
//                        d.appendNode('optional', true)
//                    }
//                }
//            }
//        }
//    }
//}

//jar {
//    enabled = true
//}

bootJar {
    enabled = false
}

idea {
    project {
        jdkName = "1.8"
        languageLevel = "1.8"
        vcs = "Git"
    }
}

configurations.all(){
    Configuration configuration ->
        configuration.resolutionStrategy.failOnVersionConflict()
}
